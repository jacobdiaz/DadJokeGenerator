{"version":3,"sources":["logo.svg","Joke.js","logo.png","JokeList.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upVote","style","borderColor","getColor","downVote","jokeText","getEmoji","Component","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","handleVote","bind","handleClick","length","getJokes","fetchedJokes","numJokesToGet","axios","get","headers","Accept","apiRes","push","joke","data","id","uuid","setState","st","setItem","stringify","delta","map","j","alt","src","logo","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.418ba437.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport \"./JokeList.css\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\n\nexport default class Joke extends Component {\n  // Picks the border color for the number of votes\n  getColor() {\n    switch (true) {\n      case this.props.votes >= 15:\n        return \"#4CAF50\";\n      case this.props.votes >= 12:\n        return \"#8BC34A\";\n      case this.props.votes >= 9:\n        return \"#CDDC39\";\n      case this.props.votes >= 3:\n        return \"#FFEB3B\";\n      case this.props.votes >= 0:\n        return \"#FFC107\";\n    }\n  }\n  // Picks the emoji for number of votes\n  getEmoji() {\n    switch (true) {\n      case this.props.votes >= 15:\n        return <i className=\"em em-rolling_on_the_floor_laughing\"></i>;\n      case this.props.votes >= 12:\n        return <i className=\"em em-laughing\"></i>;\n      case this.props.votes >= 9:\n        return <i className=\"em em-smiley\"></i>;\n      case this.props.votes >= 3:\n        return <i className=\"em em-slightly_smiling_face\"></i>;\n      case this.props.votes >= 0:\n        return <i className=\"em em-confused\"></i>;\n      default:\n        return <i className=\"em em-angry\"></i>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"joke-item\">\n        {/* Arrow Buttons */}\n        <div className=\"joke-btn\">\n          <FaArrowUp onClick={this.props.upVote} className=\"arrow\" />\n        </div>\n        <span className=\"votes\" style={{ borderColor: this.getColor() }}>\n          {this.props.votes}{\" \"}\n        </span>\n        <div className=\"joke-btn\">\n          <FaArrowDown onClick={this.props.downVote} className=\"arrow\" />\n        </div>\n\n        {/* Joke Text */}\n        <div className=\"joke-text\">{this.props.jokeText}</div>\n        <div className=\"joke-emoji\">{this.getEmoji()}</div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.7db88e5b.png\";","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport logo from \"./logo.png\";\nimport uuid from \"react-uuid\";\nconst API_URL = \"https://icanhazdadjoke.com/\";\n\nexport default class JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10,\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // If there are jokes in the local storage just load those OR parse an empty string\n      jokes: JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\"),\n    };\n    this.handleVote = this.handleVote.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    // If there aren't any jokes in state get jokes\n    if (this.state.jokes.length === 0) {\n      this.getJokes();\n    }\n  }\n\n  async getJokes() {\n    // Array to hold all the jokes from the api\n    let fetchedJokes = [];\n    // Populate an array with jokes from api\n    while (fetchedJokes.length < this.props.numJokesToGet) {\n      let apiRes = await axios.get(API_URL, {\n        headers: { Accept: \"application/json\" },\n      });\n      fetchedJokes.push({ joke: apiRes.data.joke, votes: 0, id: uuid() });\n    }\n    /// Set State to array of jokes that were just fetched\n    this.setState(\n      (st) => ({\n        jokes: [...st.jokes, ...fetchedJokes],\n      }),\n\n      // Saving jokes to Local Storage\n\n      () => {\n        window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes)); // Local storage can only hold strings so we have to stringify the json\n      }\n    );\n  }\n  handleVote(id, delta) {\n    // Set State\n    this.setState((st) => ({\n      // map through jokes\n      jokes: st.jokes.map(\n        (j) =>\n          // If the id is equal to the id of the button it was clicked then set the number of votes plus change (delta)\n          j.id === id ? { ...j, votes: j.votes + delta } : j // If its not the joke we are looking for we are just returning the joke\n      ),\n    }));\n\n    // Update Local Storage\n    window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes));\n  }\n\n  handleClick() {\n    this.getJokes();\n  }\n\n  render() {\n    return (\n      <div className=\"joke-list\">\n        <div className=\"joke-list-leftCol\">\n          <div className=\"logo\">\n            <img alt=\"logo\" src={logo} className=\"logo\"></img>\n          </div>\n          <h1>Dad Jokes</h1>\n          <button className=\"more-jokes-btn\" onClick={this.handleClick}>\n            Get more jokes!\n          </button>\n        </div>\n        <div className=\"joke-list-rightCol\">\n          {this.state.jokes.map((j) => (\n            <Joke\n              key={j.id}\n              jokeText={j.joke}\n              votes={j.votes}\n              upVote={() => {\n                this.handleVote(j.id, 1);\n              }}\n              downVote={() => {\n                this.handleVote(j.id, -1);\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport JokeList from \"./JokeList\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}